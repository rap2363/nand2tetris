// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[0..2], a=dMuxA, b=dMuxB, c=dMuxC, d=dMuxD, e=dMuxE, f=dMuxF, g=dMuxG, h=dMuxH);
    RAM512 (in=in, load=dMuxA, address=address[3..11], out=outA); // RAM512 a
    RAM512 (in=in, load=dMuxB, address=address[3..11], out=outB); // RAM512 b
    RAM512 (in=in, load=dMuxC, address=address[3..11], out=outC); // RAM512 c
    RAM512 (in=in, load=dMuxD, address=address[3..11], out=outD); // RAM512 d
    RAM512 (in=in, load=dMuxE, address=address[3..11], out=outE); // RAM512 e
    RAM512 (in=in, load=dMuxF, address=address[3..11], out=outF); // RAM512 f
    RAM512 (in=in, load=dMuxG, address=address[3..11], out=outG); // RAM512 g
    RAM512 (in=in, load=dMuxH, address=address[3..11], out=outH); // RAM512 h
    Mux8Way16 (a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[0..2], out=out);
}
