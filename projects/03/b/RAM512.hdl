// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[0..2], a=dMuxA, b=dMuxB, c=dMuxC, d=dMuxD, e=dMuxE, f=dMuxF, g=dMuxG, h=dMuxH);
    RAM64 (in=in, load=dMuxA, address=address[3..8], out=outA); // RAM64 a
    RAM64 (in=in, load=dMuxB, address=address[3..8], out=outB); // RAM64 b
    RAM64 (in=in, load=dMuxC, address=address[3..8], out=outC); // RAM64 c
    RAM64 (in=in, load=dMuxD, address=address[3..8], out=outD); // RAM64 d
    RAM64 (in=in, load=dMuxE, address=address[3..8], out=outE); // RAM64 e
    RAM64 (in=in, load=dMuxF, address=address[3..8], out=outF); // RAM64 f
    RAM64 (in=in, load=dMuxG, address=address[3..8], out=outG); // RAM64 g
    RAM64 (in=in, load=dMuxH, address=address[3..8], out=outH); // RAM64 h
    Mux8Way16 (a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[0..2], out=out);
}
